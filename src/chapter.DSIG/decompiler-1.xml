<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="decompiler">
      <title>Decompiler</title>
      <code-fragment id="dsig.methods"><code-title>Decompile a DSIG table</code-title>
  public void toXML (DecompilerConfig conf)
      throws org.xml.sax.SAXException {

    AttributesImpl at = new AttributesImpl ();
    at.addAttribute ("", "version", "version", "CDATA", "" + getuint32 (0));
    at.addAttribute ("", "flags", "flags", "CDATA", "" + getuint16 (6));

    conf.ch.startElement ("DSIG", at); {
      for (int i = 0; i &lt; getuint16 (4); i++) {
        at = new AttributesImpl ();
        at.addAttribute ("", "format", "format", "CDATA",
                         "" + getuint32 (8 + 12*i));
        conf.ch.startElement ("signature", at); {
          int offset = (int)getuint32 (8 + 12*i + 8);
          conf.ch.characters (toXML (offset,
                              (int)getuint32 (8 + 12*i + 4)));
          conf.ch.endElement ("signature"); }}
      conf.ch.endElement ("DSIG"); }
  }

  public String toXML (int offset, int length) {
    StringBuilder s = new StringBuilder ();
    char[] digits = {'0', '1', '2', '3', '4', '5', '6', '7',
                     '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};

    for (int i = offset; i &lt; offset + length; i++) {
      s.append ('%');
      s.append (digits [(data[i] &gt;&gt;4) &amp; 0xf]);
      s.append (digits [data[i]       &amp; 0xf]);
      s.append (' '); }

    return s.toString ();
  }
</code-fragment>
    </section>
    
