<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="decompiler">
      <title>Decompiler</title>
      <code-fragment id="gdef.methods">
  public void attachListTableToXMLCount (int offset, int[] counts) {
    counts [offset]++;
  }

  public void attachListTableOffsetToXML (DecompilerConfig conf, int offset,
                                          int[] counts,
                                          String element, AttributesImpl at)
      throws org.xml.sax.SAXException, InvalidFontException {

    if (counts [offset] != 1) {
      at.addAttribute ("", "name", "name", "CDATA",
                       "attachListTable_" + Integer.toHexString (offset));
      conf.ch.element (element, at); }

    else {
      attachListTableToXMLEmit (conf, offset, counts, element, at); }
  }

  public void attachListTableToXML (DecompilerConfig conf, int offset,
                                    int[] counts)
      throws org.xml.sax.SAXException, InvalidFontException {

    if (counts [offset] &gt; 1) {
      AttributesImpl at = new AttributesImpl ();
      at.addAttribute ("", "id", "id", "CDATA",
                       "attachListTable_" + Integer.toHexString (offset));
      attachListTableToXMLEmit (conf, offset, counts, "attachListTable", at);
      counts [offset] = 0; }
  }

  public void attachListTableToXMLEmit (DecompilerConfig conf, int offset,
                                        int[] counts,
                                        String element, AttributesImpl at)
      throws org.xml.sax.SAXException, InvalidFontException {


    conf.ch.startElement (element, at); {
      int[] coveredGlyphs = getCoveredGlyphs (getOffset (offset, 0));
      int glyphCount = getuint16 (offset + 2);

      for (int g = 0; g &lt; glyphCount; g++) {
        int attachPointOffset = getOffset (offset, 4 + 2*g);
        if (attachPointOffset != 0) {
	  at = new AttributesImpl ();
          at.addAttribute ("", "glyphID", "glyphID", "CDATA",
                           "" + coveredGlyphs [g]);
	  conf.ch.startElement ("attachPoint", at); {
	    int pointCount = getuint16 (attachPointOffset);
	    int o = attachPointOffset + 2;
	    for (int p = 0; p &lt; pointCount; p++) {
	      int pointIndex = getuint16 (o);
	      o += 2;
	      at = new AttributesImpl ();
	      at.addAttribute ("", "index", "index", "CDATA", "" + pointIndex);
	      conf.ch.element ("point", at); }

	      conf.ch.endElement ("attachPoint"); }}}

      conf.ch.endElement (element); }
  }
</code-fragment>
    </section>
  
