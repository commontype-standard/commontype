<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="compiler">
      <title>Compiler</title>
      <code-fragment id="lookuptable.methods">
  private Block chainingLookupFormat3FromXML (Element subtable, Element table,
                                              Map&lt;Element, Block&gt; blockCache,
					      Map&lt;String, Integer&gt; lookupIndices)
      throws InvalidFontException, UnsupportedFontException {

    Block me;

    NodeList backtrack = subtable.getFirstChild ().getChildNodes ();
    int backtrackCount = backtrack.getLength ();
    subtable.removeChild (subtable.getFirstChild ());

    NodeList input = subtable.getFirstChild ().getChildNodes ();
    int inputCount = input.getLength ();
    subtable.removeChild (subtable.getFirstChild ());

    NodeList lookahead = subtable.getFirstChild ().getChildNodes ();
    int lookaheadCount = lookahead.getLength ();
    subtable.removeChild (subtable.getFirstChild ());

    NodeList applies = subtable.getChildNodes ();
    int substCount = applies.getLength ();

    me = new Block (10 + 2*backtrackCount + 2*inputCount + 2*lookaheadCount
                       + 4*substCount,
                    backtrackCount + inputCount + lookaheadCount);
    me.setuint16 (0, 3);

    int offset = 2;
    me.setuint16 (offset, backtrackCount);
    offset += 2;
    for (int i = backtrackCount - 1; i &gt;= 0; i--) {
      Element coverage = (Element) backtrack.item (i);
      me.setOffset (offset, coverageFromXML (coverage, table, blockCache));
      offset += 2; }

    me.setuint16 (offset, inputCount);
    offset += 2;
    for (int i = 0; i &lt; inputCount; i++) {
      Element coverage = (Element) input.item (i);
      me.setOffset (offset, coverageFromXML (coverage, table, blockCache));
      offset += 2; }

    me.setuint16 (offset, lookaheadCount);
    offset += 2;
    for (int i = 0; i &lt; lookaheadCount; i++) {
      Element coverage = (Element) lookahead.item (i);
      me.setOffset (offset, coverageFromXML (coverage, table, blockCache));
      offset += 2; }

    me.setuint16 (offset, substCount);
    offset += 2;
    subLookupsFromXML (substCount, applies, me, offset, lookupIndices);

    return me;
  }
</code-fragment>
    </section>
    
