<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section xmlns:aots="http://aots.adobe.com/2001/aots" role="test-suite">
      <title>Implementation Test</title>
      <section>
        <title>context2_simple: simple case</title>
        <para>Letâ€™s start with a simple test that matches the
          sequence [1=20], [2=21], [3=22]. At each position, we then apply a
          our standard sublookups.</para>
        <aots:context-test-font id="context2_simple_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
              </classDef>
              <pattern in="1 2 3">
                <apply pos="0" lookup="lookup.single"/>
                <apply pos="1" lookup="lookup.single"/>
                <apply pos="2" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_simple_t1" font="context2_simple_f1" inputs="00,  20,   21,   22,   00" outputs="00,  60,   61,   62,   00" xdeltas="0,   20,   20,   20,    0" ydeltas="0,    0,    0,    0,    0"/>
        <para>Here is a test case on the same font that involves partial
          matches input sequence:</para>
        <aots:context-test id="context2_simple_t2" font="context2_simple_f1" inputs="00,  20,  00,  20,  21,  00" outputs="00,  20,  00,  20,  21,  00" xdeltas="0,    0,   0,   0,   0,   0" ydeltas="0,    0,   0,   0,   0,   0"/>
        <para>When applying a sublookup, that must be done as the
	  position given by the contextual lookup, not to all possible
	  positions in the matched input or beyond:</para>
        <aots:context-test-font id="context2_simple_f2">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
              </classDef>
              <pattern in="1 1 1">
                <apply pos="1" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_simple_t3" font="context2_simple_f2" inputs="00,  20,   20,   20,   20,   20,   00" outputs="00,  20,   60,   20,   20,   20,   00" xdeltas="0,    0,   20,    0,    0,    0,    0" ydeltas="0,    0,    0,    0,    0,    0,    0"/>
      </section>
      <section>
        <title>context2_next_glyph</title>
        <para>Our next test verifies that the proper glyph is
	  processed after a contextual lookup it applied. The lookup
	  matches the sequence 20, 20  and applies the standard
	  sublookups to the first occurrence of 20.</para>
        <aots:context-test-font id="context2_next_glyph_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
              </classDef>
              <pattern in="1 1">
                <apply pos="0" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_next_glyph_t1" font="context2_next_glyph_f1" inputs="00,  20,   20,   20,   20,   20,   00" outputs="00,  60,   20,   60,   20,   20,   00" xdeltas="0,   20,    0,   20,    0,    0,    0" ydeltas="0,    0,    0,    0,    0,    0,    0"/>
      </section>
      <section>
        <title>context2_boundary</title>
        <para>We test the boundary case of SubstCount equal to 0.</para>
        <aots:context-test-font id="context2_boundary_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
              </classDef>
              <pattern in="1 1"/>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_boundary_t1" font="context2_boundary_f1" inputs="00,  20,   20,   20,   20,   20,   00" outputs="00,  20,   20,   20,   20,   20,   00" xdeltas="0,    0,    0,    0,    0,    0,    0" ydeltas="0,    0,    0,    0,    0,    0,    0"/>
        <para>Another boundary case is when GlyphCount is 1.</para>
        <aots:context-test-font id="context2_boundary_f2">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
              </classDef>
              <pattern in="1">
                <apply pos="0" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_boundary_t2" font="context2_boundary_f2" inputs="00,  20,   20,   20,   20,   20,   00" outputs="00,  60,   60,   60,   60,   60,   00" xdeltas="0,   20,   20,   20,   20,   20,    0" ydeltas="0,    0,    0,    0,    0,    0,    0"/>
      </section>
      <section>
        <title>context2_multiple_subrules</title>
        <para>The next two tests ensure that the subrules of
          subruleset are applied in the prescribed order. In the first
          one, the matched sequences are 20, 21, 22, with the standard
          sublookups applied on 20, and 20, 21, with the standard
          sublookups applied on 21.</para>
        <aots:context-test-font id="context2_multiple_subrules_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
              </classDef>
              <pattern in="1 2 3">
                <apply pos="0" lookup="lookup.single"/>
              </pattern>
              <pattern in="1 2">
                <apply pos="1" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_multiple_subrules_t1" font="context2_multiple_subrules_f1" inputs="00,  20,   21,   22,   00,   20,   21,   00" outputs="00,  60,   21,   22,   00,   20,   61,   00" xdeltas="0,   20,    0,    0,    0,    0,   20,    0" ydeltas="0,    0,    0,    0,    0,    0,    0,    0"/>
        <para>In the next test, we just invert the order of two
	  subrules.</para>
        <aots:context-test-font id="context2_multiple_subrules_f2">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
              </classDef>
              <pattern in="1 2">
                <apply pos="1" lookup="lookup.single"/>
              </pattern>
              <pattern in="1 2 3">
                <apply pos="0" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_multiple_subrules_t2" font="context2_multiple_subrules_f2" inputs="00,  20,   21,   22,   00,   20,   21,   00" outputs="00,  20,   61,   22,   00,   20,   61,   00" xdeltas="0,    0,   20,    0,    0,    0,   20,    0" ydeltas="0,    0,    0,    0,    0,    0,    0,    0"/>
      </section>
      <section>
        <title>context2_successive</title>
        <para>In this test, we verify the case described in the
          SubstLookupRecord section. This applies to GSUB contextual
          lookups only. The matched sequence is 20 21 22 23. Glyphs 21
          and 22 are replaced by glyph 61 and glyph 23 is replaced by
          glyph 63. The difficult part is that the lookup that
          replaces 22 is applied at position 2, which is counted after
          the ligature substitution is applied.</para>
        <aots:context-test-font id="context2_successive_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
                <class classID="4" glyphs="23"/>
              </classDef>
              <pattern in="1 2 3 4">
                <apply pos="1" lookup="lookup.double"/>
                <apply pos="2" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_successive_t1" font="context2_successive_f1" inputs="00,  20,   21,   22,  23,   00" outputs="00,  20,   61,        63,   00" xdeltas="0,    0,   20,   20,   0,    0" ydeltas="0,    0,    0,    0,   0,    0"/>
      </section>
      <section>
        <title>context2_lookupflag</title>
        <para>Our next test case involves LookupFlag. The input
          sequence is 20 21 22, with standard sublookups applied at
          all three positions.</para>
        <aots:context-test-font id="context2_lookupflag_f1">
          <lookup id="lookup.test" type="contextual" ignoreMarks="yes">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
              </classDef>
              <pattern in="1 2 3">
                <apply pos="0" lookup="lookup.single"/>
                <apply pos="1" lookup="lookup.single"/>
                <apply pos="2" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_lookupflag_t1" font="context2_lookupflag_f1" inputs="00,  20,  90,  21,  91,  92,  22,   00" outputs="00,  60,  90,  61,  91,  92,  62,   00" xdeltas="0,   20,   0,  20,   0,   0,  20,    0" ydeltas="0,    0,   0,   0,   0,   0,   0,    0"/>
        <para>The interaction between LookupFlag of the contextal
	  substitution and LookupFlag of the sublookups is not very
	  clear. It is certainly desired that any glyph covered by
	  the contextual substitution LookupFlag be invisible to the
	  sublookups; what is unclear is whether this is achieved by
	  constraining legal fonts, or whether CommonType engines have
	  to enforce that behavior. Here is a font that does have
	  consistent LookupFlag, and it should behave properly with
	  all layout engines.</para>
        <aots:context-test-font id="context2_lookupflag_f2">
          <lookup id="lookup.test" type="contextual" ignoreMarks="yes">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
              </classDef>
              <pattern in="1 2 3">
                <apply pos="1" lookup="lookup.double.nomarks"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_lookupflag_t2" font="context2_lookupflag_f2" inputs="00,  20,  90,  21,  91,  92,  22,   00" outputs="00,  20,  90,  61,  91,  92,        00" xdeltas="0,    0,   0,  20,   0,   0,   0,    0" ydeltas="0,    0,   0,   0,   0,   0,   0,    0"/>
      </section>
      <section>
        <title>context2_expansion</title>
        <para>As we have noted in multiple substitution lookups, the
          glyph run can be expanded. While a chaining lookup does not
          be itself perform that operation, it may invoke a multiple
          substitution lookup.</para>
        <aots:context-test-font id="context2_expansion_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage glyphs="20" format="any"/>
              <classDef format="any">
                <class classID="1" glyphs="20"/>
                <class classID="2" glyphs="21"/>
                <class classID="3" glyphs="22"/>
              </classDef>
              <pattern in="1 2 3">
                <apply pos="1" lookup="lookup.multiple"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_expansion_t1" font="context2_expansion_f1" inputs="00,  20,  21,            22,  00" outputs="00,  20,  61,  62,  63,  22,  00" xdeltas="0,    0,   0,             0,   0" ydeltas="0,    0,   0,             0,   0"/>
      </section>
      <section>
        <title>context2_classes</title>
        <para>So far, we have used a fairly simple class definition,
          with one glyph per class. Time to do something a bit more
          fancy, with a format 2 Class Definition. Note that the
          coverage of the subtable does not include all the glyphs in
          class 1 (the first class in the input pattern), glyph 22 is
          left out.</para>
        <aots:context-test-font id="context2_classes_f1">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage format="any" glyphs="20 21"/>
              <classDef format="any">
                <class classID="1" glyphs="20 21 22"/>
                <class classID="2" glyphs="26 27 28 29"/>
                <class classID="3" glyphs="24"/>
              </classDef>
              <pattern in="1 2 2 3">
                <apply pos="1" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_classes_t1" font="context2_classes_f1" inputs="00, 20, 26, 28, 24, 00, 21, 27, 26, 24, 00, 22, 27, 26, 24" outputs="00, 20, 66, 28, 24, 00, 21, 67, 26, 24, 00, 22, 27, 26, 24" xdeltas=" 0,  0, 20,  0,  0,  0,  0, 20,  0,  0,  0,  0,  0,  0,  0" ydeltas=" 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0"/>
        <para>So far, the covered glyphs have been in a single
            class. Letâ€™s use two SubClassSets, by adding [3] [2] [1]
            as an input sequence.This time, we include glyph 22 in the
            coverage.</para>
        <aots:context-test-font id="context2_classes_f2">
          <lookup id="lookup.test" type="contextual">
            <contextual format="2">
              <coverage format="any" glyphs="20 21 22 24"/>
              <classDef format="any">
                <class classID="1" glyphs="20 21 22"/>
                <class classID="2" glyphs="26 27 28 29"/>
                <class classID="3" glyphs="24"/>
              </classDef>
              <pattern in="1 2 2 3">
                <apply pos="1" lookup="lookup.single"/>
              </pattern>
              <pattern in="3 3 2 1">
                <apply pos="2" lookup="lookup.single"/>
              </pattern>
            </contextual>
          </lookup>
        </aots:context-test-font>
        <aots:context-test id="context2_classes_t2" font="context2_classes_f2" inputs="00, 22, 27, 26, 24, 00, 24, 24, 29, 22, 00, 22, 27, 26, 24" outputs="00, 22, 67, 26, 24, 00, 24, 24, 69, 22, 00, 22, 67, 26, 24" xdeltas=" 0,  0, 20,  0,  0,  0,  0,  0, 20,  0,  0,  0, 20,  0,  0" ydeltas=" 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0"/>
      </section>
    </section>
  
