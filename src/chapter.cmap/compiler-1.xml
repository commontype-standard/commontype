<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="compiler">
      <title>Compiler</title>
      <code-fragment id="cmap.methods">
  public void fromXML (Element cmap)
      throws InvalidFontException, UnsupportedFontException {

    int version = Integer.parseInt (cmap.getAttribute ("version"));
    if (version != 0) {
      throw new UnsupportedFontException ( "invalid cmap version: " + version); }

    NodeList cmaps = cmap.getChildNodes ();

    int cmapsCount = 0;

    for (int i = 0; i &lt; cmaps.getLength (); i++) {
      Element e = (Element) cmaps.item (i);
      if ("mapping".equals (e.getTagName ())) {
        cmapsCount++; }}

    Block[] cmapsSubtables = new Block [cmapsCount];
    int[] platformids = new int [cmapsCount];
    int[] encodingids = new int [cmapsCount];
    int[] languages = new int [cmapsCount];
    int format;

    for (int i = 0; i &lt; cmapsCount; i++) {
      Element cmaptable = (Element) cmaps.item (i);
      platformids [i] = Integer.parseInt (cmaptable.getAttribute ("platformid"));
      encodingids [i] = Integer.parseInt (cmaptable.getAttribute ("encodingid"));
      languages [i]   = Integer.parseInt (cmaptable.getAttribute ("language"));

      { String name = cmaptable.getAttribute ("name");
        if (name != null &amp;&amp; ! "".equals (name)) {
          cmaptable = resolveXMLid (cmap, name); }}

      format = Integer.parseInt (cmaptable.getAttribute ("format"));
      cmapsSubtables [i] = null;

      if (format == 0) {
        cmapsSubtables [i] = format0FromXML (cmaptable, languages [i]); }
      else if (format == 2) {
        cmapsSubtables [i] = format2FromXML (cmaptable, languages [i]); }
      else if (format == 4) {
        cmapsSubtables [i] = format4FromXML (cmaptable, languages [i]); }
      else if (format == 6) {
        cmapsSubtables [i] = format6FromXML (cmaptable, languages [i]); }
      else if (format == 8) {
        cmapsSubtables [i] = format8FromXML (cmaptable, languages [i]); }
      else if (format == 10) {
        cmapsSubtables [i] = format10FromXML (cmaptable, languages [i]); }
      else if (format == 12) {
        cmapsSubtables [i] = format12FromXML (cmaptable, languages [i]); }
      else if (format == 14) {
        cmapsSubtables [i] = format14FromXML (cmaptable, languages [i]); }}


    for (int i = 0; i &lt; cmapsCount; i++) {
      for (int j = i + 1; j &lt; cmapsCount; j++) {
        boolean swap = false;
        if (platformids [i] &gt; platformids [j]) {
          swap = true; }
        else if (platformids [i] == platformids [j]) {
          if (encodingids [i] &gt; encodingids [j]) {
            swap = true; }
          else if (encodingids [i] == encodingids [j]) {
            if (languages [i] &gt; languages [j]) {
              swap = true; }}}

        if (swap) {
          { int tmp = platformids [j];
            platformids [j] = platformids [i];
            platformids [i] = tmp; }

          { int tmp = encodingids [j];
            encodingids [j] = encodingids [i];
            encodingids [i] = tmp; }

          { int tmp = languages [j];
            languages [j] = languages [i];
            languages [i] = tmp; }

          { Block tmp = cmapsSubtables [j];
            cmapsSubtables [j] = cmapsSubtables [i];
            cmapsSubtables [i] = tmp; }}}}


    int size = 4 + cmapsCount * 8;
    Block me = new Block (size, cmapsCount);
    me.setuint16 (0, version);
    me.setuint16 (2, cmapsCount);

    int offset = 4;
    for (int i = 0; i &lt; cmapsCount; i++) {
      me.setuint16 (offset, platformids [i]);
      me.setuint16 (offset+2, encodingids [i]);
      me.setBigOffset (offset + 4, cmapsSubtables [i]);
      offset += 8; }

    data = me.serialize ();
  }
</code-fragment>
    </section>
    
