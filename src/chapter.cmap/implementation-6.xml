<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="implementation">
      <title>Implementation</title>
      <code-fragment id="cmap_format8"><code-title>Return glyph for 'charCode', using format 8 subtable at 'stOffset'</code-title>
  { int nGroups = getuint32asint (stOffset + 8204,
                                  "cmap subtable, format 8, nGroups is big");
    int min = 0;
    int max = nGroups - 1;

    while (min &lt;= max) {
      int s = (min + max) / 2;
      int startCharCode = getuint32asint (stOffset + 8208 + 12*s,
                                          "cmap subtable, format 8, startCharCode is big");
      int endCharCode = getuint32asint (stOffset + 8208 + 12*s + 4,
                                        "cmap subtable, format 8, endCharCode is big");

      if (charCode &lt; startCharCode) {
        max = s - 1; }
      else if (endCharCode &lt; charCode) {
        min = s + 1; }
      else {
        int startGlyphID = getuint32asint (stOffset + 8208 + 12*s + 8,
                                           "cmap subtable, format 8, startGlyphID is big");
        return charCode - startCharCode + startGlyphID; }}

    return 0; }
</code-fragment>
      <code-fragment id="cmap_format8_iterator"><code-title>Enumerate mappings in format 8 subtable at 'stOffset'</code-title>
  { java.util.TreeMap&lt;Integer, Integer&gt; m
        = new java.util.TreeMap&lt;Integer, Integer&gt; ();

    int nGroups = getuint32asint (stOffset + 8204,
                                  "cmap subtable, format 8, nGroups is big");

    for (int g = 0; g &lt; nGroups; g++) {

      int startCharCode = getuint32asint (stOffset + 8208 + 12*g,
                                          "cmap subtable, format 8, startCharCode is big");
      int endCharCode = getuint32asint (stOffset + 8208 + 12*g + 4,
                                        "cmap subtable, format 8, endCharCode is big");
        int startGlyphID = getuint32asint (stOffset + 8208 + 12*g + 8,
                                           "cmap subtable, format 8, startGlyphID is big");

      for (int c = startCharCode; c &lt;= endCharCode; c++) {
        if (from &lt;= c &amp;&amp; (c &lt;= to || to == -1)) {
          m.put (c, startGlyphID + (endCharCode - startCharCode)); }}}

     return m; }

</code-fragment>
      <code-fragment id="cmap_format8_inv"><code-title>Return character for 'glyphID', using format 8 subtable at stOffset</code-title>
  { return -1; /* TODO */ }
</code-fragment>
    </section>
    
