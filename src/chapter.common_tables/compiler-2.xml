<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="compiler">
      <title>Compiler</title>
      <code-fragment id="lookuptable.methods"><code-title>Output a Script table</code-title>

  private Block scriptTableFromXML (Element t, Element table,
                                    Map&lt;Element, Block&gt; blockCache,
				    Map&lt;String, Integer&gt; featureIndices)
      throws InvalidFontException, UnsupportedFontException {

    { String name = t.getAttribute ("name");
      if (name != null &amp;&amp; ! "".equals (name)) {
        t = resolveXMLid (table, name); }}

    { Block cached = blockCache.get (t);
      if (cached != null) {
        return cached; }}

    NodeList langs = t.getChildNodes ();

    Element defaultLangSys = null;
    if (langs.getLength () &gt; 0
        &amp;&amp; "defaultLangSys".equals (((Element) (langs.item (0))).getTagName ())) {
      defaultLangSys = (Element) langs.item (0);
      t.removeChild (defaultLangSys);
      langs = t.getChildNodes (); }

    int langSysCount = langs.getLength ();

    Block me = new Block (4 + 6 * langSysCount, langSysCount + 1);

    me.setOffset (0, defaultLangSys == null
                      ? null :
                        langSysTableFromXML (defaultLangSys, table,
                                             blockCache, featureIndices));
    me.setuint16 (2, langSysCount);
    for (int i = 0; i &lt; langSysCount; i++) {
      Element langSys = (Element) langs.item (i);
      me.setTag (4 + 6*i, langSys.getAttribute ("tag"));
      me.setOffset (4 + 6*i + 4,
                    langSysTableFromXML (langSys, table,
                                         blockCache, featureIndices)); }

    blockCache.put (t, me);
    return me;
  }
</code-fragment>
    </section>
    
