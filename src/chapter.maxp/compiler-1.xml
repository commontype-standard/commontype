<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<section role="compiler">
      <title>Compiler</title>
      <code-fragment id="maxp.methods">
  public void fromXML (Element maxp)
    throws InvalidFontException, UnsupportedFontException {

    int major = Integer.decode (maxp.getAttribute ("major")).intValue ();
    int minor = Integer.decode (maxp.getAttribute ("minor")).intValue ();
    Block me;

    if (major == 0 &amp;&amp; minor == 5) {
      me = new Block (6, 0);
      me.setFixed (0, 0, 0x5000); }
    else if (major == 1 &amp;&amp; minor == 0) {
      me = new Block (32, 0);
      me.setFixed (0, 1, 0); }
    else {
      throw new InvalidFontException
                   ("invalid maxp version (" + major + "." + minor + ")"); }


    NodeList children = maxp.getChildNodes ();
    for (int i = 0; i &lt; children.getLength (); i++) {
      Element e = (Element) children.item (i);

      if ("numGlyphs".equals (e.getTagName ())) {
        me.setuint16(4, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxPoints".equals (e.getTagName ())) {
        me.setuint16(6, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxContours".equals (e.getTagName ())) {
        me.setuint16(8, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxCompositePoints".equals (e.getTagName ())) {
        me.setuint16(10, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxCompositeContours".equals (e.getTagName ())) {
        me.setuint16(12, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxZones".equals (e.getTagName ())) {
        me.setuint16(14, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxTwilightPoints".equals (e.getTagName ())) {
        me.setuint16(16, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxStorage".equals (e.getTagName ())) {
        me.setuint16(18, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxFunctionDefs".equals (e.getTagName ())) {
        me.setuint16(20, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxInstructionDefs".equals (e.getTagName ())) {
        me.setuint16(22, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxStackElements".equals (e.getTagName ())) {
        me.setuint16(24, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxSizeOfInstructions".equals (e.getTagName ())) {
        me.setuint16(26, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxComponentElements".equals (e.getTagName ())) {
        me.setuint16(28, Integer.decode (e.getAttribute ("v")).intValue()); }

      if ("maxComponentDepth".equals (e.getTagName ())) {
        me.setuint16(30, Integer.decode (e.getAttribute ("v")).intValue()); }}

    data = me.serialize ();
  }
</code-fragment>
    </section>
    
